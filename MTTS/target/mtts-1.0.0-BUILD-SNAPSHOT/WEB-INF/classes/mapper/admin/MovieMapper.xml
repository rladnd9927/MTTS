<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mju.mtts.dao.movie.MovieDao">

	
	<select id="selectAll" resultType="movie">
		SELECT
				m.MOVIE_SEQ as 'movieSeq'
			,	m.TITLE as 'title'
			,	m.PLAYTIME as 'playTime'
			,	m.SYNOPSIS as 'synopsis'
			,	m.PRODUCE_YEAR as 'produceYear'
			,	m.OPEN_DATE as 'openDate'
			,	m.GRADE_AVG as 'gradeAvg'
			,	m.RESERV_COUNT as 'reservCount'
			 
		FROM	admin.MOVIE m JOIN admin.SHOWMOVIE
		<if test="movieSeq != null">
			WHERE m.MOVIE_SEQ = #{movieSeq}
		</if>
		<if test="sortCode == null">
			GROUP BY m.MOVIE_SEQ
		</if>
		<if test="sortCode != null">
			<choose>
				<when test="sortCode == 'grade'">
					GROUP BY m.GRADE_AVG DESC
			    </when>
			    <when test="sortCode == 'open'">
			      	GROUP BY m.OPEN_DATE DESC
			    </when>
			    <when test="sortCode == 'reserv'">
			    	GROUP BY m.RESERV_COUNT DESC
			    </when>
		 	</choose>
		</if>
		
	</select>
	
	<select id="getGenreMovie" resultType="movie">
		SELECT
				m.MOVIE_SEQ as 'movieSeq'
			,	m.TITLE as 'title'
			,	m.PLAYTIME as 'playTime'
			,	m.SYNOPSIS as 'synopsis'
			,	m.PRODUCE_YEAR as 'produceYear'
			,	m.OPEN_DATE as 'openDate'
			,	m.GRADE_AVG as 'gradeAvg'
			,	m.RESERV_COUNT as 'reservCount'
			,	g.GENRE_SEQ as 'genreSeq'
		
		FROM	admin.MOVIE m NATURAL JOIN admin.MOVIEGENRE g
		WHERE	g.GENRE_SEQ = #{genreSeq}
		
		<if test="sortCode == null">
			GROUP BY m.MOVIE_SEQ
		</if>
		<if test="sortCode != null">
			<choose>
				<when test="sortCode == 'grade'">
					GROUP BY m.GRADE_AVG DESC
			    </when>
			    <when test="sortCode == 'open'">
			      	GROUP BY m.OPEN_DATE DESC
			    </when>
			    <when test="sortCode == 'reserv'">
			    	GROUP BY m.RESERV_COUNT DESC
			    </when>
		 	</choose>
		</if>
		
	</select>
	
	<select id="getGrade" resultType="Double">
		SELECT
				avg(GRADE) as 'grade'
			
		FROM	admin.MOVIE_REVIEW
		WHERE	MOVIE_SEQ = #{movieSeq}
		GROUP BY	MOVIE_SEQ
	</select>
	
	<select id="getGenre" resultType="genre">
		SELECT 
				GENRE_SEQ as 'genreSeq'
		,		GENRE_NAME as 'genre'
				
		FROM	admin.GENRE natural join admin.MOVIEGENRE
		WHERE	MOVIE_SEQ = #{movieSeq}
	</select>

	<select id="getCountry" resultType="String">

		SELECT
				COUNTRY_NAME as 'country'
				
		FROM	admin.PRODUCE_COMPANY natural join admin.COUNTRY
		WHERE	PRODUCE_COMPANY_SEQ IN
				(SELECT
						PRODUCE_COMPANY_SEQ
				FROM MOVIE
				WHERE MOVIE_SEQ = #{movieSeq})
	</select>
	
	<select id="getRate" resultType="String">
	
		SELECT
				RATE as 'rate'
		
		FROM	admin.RATE natural join admin.MOVIE
		WHERE	MOVIE_SEQ = #{movieSeq}
	
	</select>
	
	<select id="getMovieActor" resultType="staff">
		SELECT
				L.STAFF_SEQ as 'staffSeq'
			,	STAFF_NAME as 'name'
			,	BIRTHDATE as 'birthDate'
			,	BIRTHlEGION as 'birthLegion'
			,	PROFILE as 'profile'
			,	ROLE as 'role'
			,	PICTURE_URL as 'pictureURL'
	
		FROM	STAFF L NATURAL JOIN
				(SELECT
						L.STAFF_SEQ
					,	PICTURE_URL
					,	ROLE 
					
				FROM 
					(SELECT 
							MOVIE_PRODUCE_SEQ
						,	STAFF_SEQ
						,	MOVIE_SEQ
						,	ROLE 
						
					FROM	MOVIE_PRODUCE 
					WHERE	MOVIE_SEQ=#{movieSeq} AND JOB_CODE IN (12,13)
					) L
					LEFT JOIN 
					(SELECT 
							MOVIEPICTURE_SEQ
						,	STAFF_SEQ
						,	MOVIE_SEQ
						,	MOVIE_PRODUCE_SEQ
						,	PICTURE_NAME
						,	PICTURE_URL
					
					FROM	MOVIE_PICTURE
					WHERE	PICTURE_CODE=2) R
					ON L.MOVIE_PRODUCE_SEQ = R.MOVIE_PRODUCE_SEQ 
					AND L.STAFF_SEQ = R.STAFF_SEQ 
					AND L.MOVIE_SEQ = R.MOVIE_SEQ
					)R
	</select>
	
	<select id="getMovieDirector" resultType="staff">
		SELECT
				L.STAFF_SEQ as 'staffSeq'
			,	STAFF_NAME as 'name'
			,	BIRTHDATE as 'birthDate'
			,	BIRTHlEGION as 'birthLegion'
			,	PROFILE as 'profile'
			,	ROLE as 'role'
			,	PICTURE_URL as 'pictureURL'
	
		FROM	STAFF L NATURAL JOIN
				(SELECT
						L.STAFF_SEQ
					,	PICTURE_URL
					,	ROLE 
					
				FROM 
					(SELECT 
							MOVIE_PRODUCE_SEQ
						,	STAFF_SEQ
						,	MOVIE_SEQ
						,	ROLE 
						
					FROM	MOVIE_PRODUCE 
					WHERE	MOVIE_SEQ=#{movieSeq} AND JOB_CODE IN (10)
					) L
					LEFT JOIN 
					(SELECT 
							MOVIEPICTURE_SEQ
						,	STAFF_SEQ
						,	MOVIE_SEQ
						,	MOVIE_PRODUCE_SEQ
						,	PICTURE_NAME
						,	PICTURE_URL
					
					FROM	MOVIE_PICTURE
					WHERE	PICTURE_CODE=2) R
					ON L.MOVIE_PRODUCE_SEQ = R.MOVIE_PRODUCE_SEQ 
					AND L.STAFF_SEQ = R.STAFF_SEQ 
					AND L.MOVIE_SEQ = R.MOVIE_SEQ
					)R
	</select>
	
	<select id="getMoviePicture" resultType="picture">
		SELECT
				PICTURE_NAME as 'pictureName'
			,	PICTURE_CODE as 'pictureCode'
			,	PICTURE_URL as 'pictureURL'
			
		FROM	admin.MOVIE_PICTURE
		WHERE	admin.MOVIE_PICTURE.MOVIE_SEQ = #{movieSeq} 
			AND	admin.MOVIE_PICTURE.PICTURE_CODE NOT IN (2)

	</select>
	
	<select id="getMoviePoster" resultType="picture">
		SELECT
				PICTURE_NAME as 'pictureName'
			,	PICTURE_CODE as 'pictureCode'
			,	PICTURE_URL as 'pictureURL'
			
		FROM	admin.MOVIE_PICTURE
		WHERE	admin.MOVIE_PICTURE.MOVIE_SEQ = #{movieSeq} 
		AND		admin.MOVIE_PICTURE.PICTURE_CODE = 1

	</select>
	
	<select id="getMovieReview" resultType="review">
		SELECT
				REVIEW_SEQ as 'reviewSeq'
			,	GRADE as 'grade'
			,	REVIEW as 'review'
			,	CREATE_DATE as 'createDate'
			,	WRITER as 'writer'
			,	PWD as 'pwd'
		
		FROM	admin.MOVIE_REVIEW
		WHERE	MOVIE_SEQ = #{movieSeq }
	
	</select>
	
	<select id="getMovieVideo" resultType="video">
		SELECT
				VIDEO_CODE as 'videoCode'
			,	VIDEO_NAME as 'videoName'
			,	VIDEO_URL as 'videoURL'
			,	VIDEO_PICTURE_URL as 'videoPictureURL'
		
		FROM	admin.MOVIE_VIDEO
		WHERE	MOVIE_SEQ = #{movieSeq }
	</select>
	
	<select id="getMovieFameLine" resultType="fameLine">
		SELECT
				FAME_LINE_SEQ as 'fameLineSeq'
			,	STAFF_NAME as 'staffName'
			,	FAME_LINE as 'fameLine'
			,	WRITER as 'writer'
			,	RECOMMEND as 'recommend'
			,	CREATEDATE as 'createDate'
	
		FROM	STAFF NATURAL JOIN 
				(SELECT
						FAME_LINE_SEQ
					,	STAFF_SEQ
					,	FAME_LINE
					,	WRITER
					,	RECOMMEND
					,	CREATEDATE
				FROM	FAME_LINE
				WHERE	MOVIE_SEQ = 1) a;
	</select>
	
	<update id="updateReservCnt">
		UPDATE 
			admin.MOVIE
		SET
		<if test="param2 == 'plus'">
			RESERV_COUNT = RESERV_COUNT + 1
		</if>
		<if test="param2 == 'minus'">
			RESERV_COUNT = RESERV_COUNT - 1
		</if>
		WHERE 
			MOVIE_SEQ = #{0}
	</update>
</mapper>